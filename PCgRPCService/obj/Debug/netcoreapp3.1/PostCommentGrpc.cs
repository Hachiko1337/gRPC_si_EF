// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/PostComment.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace PCgRPCService {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class Greeter
  {
    static readonly string __ServiceName = "postcomment.Greeter";

    static readonly grpc::Marshaller<global::PCgRPCService.HelloRequest> __Marshaller_postcomment_HelloRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PCgRPCService.HelloRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PCgRPCService.HelloReply> __Marshaller_postcomment_HelloReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PCgRPCService.HelloReply.Parser.ParseFrom);

    static readonly grpc::Method<global::PCgRPCService.HelloRequest, global::PCgRPCService.HelloReply> __Method_SayHello = new grpc::Method<global::PCgRPCService.HelloRequest, global::PCgRPCService.HelloReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SayHello",
        __Marshaller_postcomment_HelloRequest,
        __Marshaller_postcomment_HelloReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PCgRPCService.PostCommentReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Greeter</summary>
    [grpc::BindServiceMethod(typeof(Greeter), "BindService")]
    public abstract partial class GreeterBase
    {
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::PCgRPCService.HelloReply> SayHello(global::PCgRPCService.HelloRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GreeterBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SayHello, serviceImpl.SayHello).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GreeterBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SayHello, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PCgRPCService.HelloRequest, global::PCgRPCService.HelloReply>(serviceImpl.SayHello));
    }

  }
  public static partial class PostCommentService
  {
    static readonly string __ServiceName = "postcomment.PostCommentService";

    static readonly grpc::Marshaller<global::PCgRPCService.Post> __Marshaller_postcomment_Post = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PCgRPCService.Post.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PCgRPCService.Empty> __Marshaller_postcomment_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PCgRPCService.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PCgRPCService.Id> __Marshaller_postcomment_Id = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PCgRPCService.Id.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PCgRPCService.Posts> __Marshaller_postcomment_Posts = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PCgRPCService.Posts.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PCgRPCService.Comment> __Marshaller_postcomment_Comment = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PCgRPCService.Comment.Parser.ParseFrom);

    static readonly grpc::Method<global::PCgRPCService.Post, global::PCgRPCService.Empty> __Method_AddPost = new grpc::Method<global::PCgRPCService.Post, global::PCgRPCService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddPost",
        __Marshaller_postcomment_Post,
        __Marshaller_postcomment_Empty);

    static readonly grpc::Method<global::PCgRPCService.Post, global::PCgRPCService.Post> __Method_UpdatePost = new grpc::Method<global::PCgRPCService.Post, global::PCgRPCService.Post>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePost",
        __Marshaller_postcomment_Post,
        __Marshaller_postcomment_Post);

    static readonly grpc::Method<global::PCgRPCService.Post, global::PCgRPCService.Empty> __Method_DeletePost = new grpc::Method<global::PCgRPCService.Post, global::PCgRPCService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeletePost",
        __Marshaller_postcomment_Post,
        __Marshaller_postcomment_Empty);

    static readonly grpc::Method<global::PCgRPCService.Id, global::PCgRPCService.Post> __Method_GetPostById = new grpc::Method<global::PCgRPCService.Id, global::PCgRPCService.Post>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPostById",
        __Marshaller_postcomment_Id,
        __Marshaller_postcomment_Post);

    static readonly grpc::Method<global::PCgRPCService.Empty, global::PCgRPCService.Posts> __Method_GetPosts = new grpc::Method<global::PCgRPCService.Empty, global::PCgRPCService.Posts>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPosts",
        __Marshaller_postcomment_Empty,
        __Marshaller_postcomment_Posts);

    static readonly grpc::Method<global::PCgRPCService.Comment, global::PCgRPCService.Empty> __Method_AddComment = new grpc::Method<global::PCgRPCService.Comment, global::PCgRPCService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddComment",
        __Marshaller_postcomment_Comment,
        __Marshaller_postcomment_Empty);

    static readonly grpc::Method<global::PCgRPCService.Comment, global::PCgRPCService.Comment> __Method_UpdateComment = new grpc::Method<global::PCgRPCService.Comment, global::PCgRPCService.Comment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateComment",
        __Marshaller_postcomment_Comment,
        __Marshaller_postcomment_Comment);

    static readonly grpc::Method<global::PCgRPCService.Id, global::PCgRPCService.Comment> __Method_GetCommentById = new grpc::Method<global::PCgRPCService.Id, global::PCgRPCService.Comment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCommentById",
        __Marshaller_postcomment_Id,
        __Marshaller_postcomment_Comment);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PCgRPCService.PostCommentReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of PostCommentService</summary>
    [grpc::BindServiceMethod(typeof(PostCommentService), "BindService")]
    public abstract partial class PostCommentServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::PCgRPCService.Empty> AddPost(global::PCgRPCService.Post request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::PCgRPCService.Post> UpdatePost(global::PCgRPCService.Post request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::PCgRPCService.Empty> DeletePost(global::PCgRPCService.Post request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::PCgRPCService.Post> GetPostById(global::PCgRPCService.Id request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::PCgRPCService.Posts> GetPosts(global::PCgRPCService.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::PCgRPCService.Empty> AddComment(global::PCgRPCService.Comment request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::PCgRPCService.Comment> UpdateComment(global::PCgRPCService.Comment request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::PCgRPCService.Comment> GetCommentById(global::PCgRPCService.Id request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(PostCommentServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddPost, serviceImpl.AddPost)
          .AddMethod(__Method_UpdatePost, serviceImpl.UpdatePost)
          .AddMethod(__Method_DeletePost, serviceImpl.DeletePost)
          .AddMethod(__Method_GetPostById, serviceImpl.GetPostById)
          .AddMethod(__Method_GetPosts, serviceImpl.GetPosts)
          .AddMethod(__Method_AddComment, serviceImpl.AddComment)
          .AddMethod(__Method_UpdateComment, serviceImpl.UpdateComment)
          .AddMethod(__Method_GetCommentById, serviceImpl.GetCommentById).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, PostCommentServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddPost, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PCgRPCService.Post, global::PCgRPCService.Empty>(serviceImpl.AddPost));
      serviceBinder.AddMethod(__Method_UpdatePost, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PCgRPCService.Post, global::PCgRPCService.Post>(serviceImpl.UpdatePost));
      serviceBinder.AddMethod(__Method_DeletePost, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PCgRPCService.Post, global::PCgRPCService.Empty>(serviceImpl.DeletePost));
      serviceBinder.AddMethod(__Method_GetPostById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PCgRPCService.Id, global::PCgRPCService.Post>(serviceImpl.GetPostById));
      serviceBinder.AddMethod(__Method_GetPosts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PCgRPCService.Empty, global::PCgRPCService.Posts>(serviceImpl.GetPosts));
      serviceBinder.AddMethod(__Method_AddComment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PCgRPCService.Comment, global::PCgRPCService.Empty>(serviceImpl.AddComment));
      serviceBinder.AddMethod(__Method_UpdateComment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PCgRPCService.Comment, global::PCgRPCService.Comment>(serviceImpl.UpdateComment));
      serviceBinder.AddMethod(__Method_GetCommentById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PCgRPCService.Id, global::PCgRPCService.Comment>(serviceImpl.GetCommentById));
    }

  }
}
#endregion
